<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Planner • Status History</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <script src="../assets/js/noco.js"></script>
  <script src="../assets/js/auth-lite.js"></script>
  <style>
    :root{--primary:#0056b3;--bg:#f5f7fb;--card:#fff;--border:#e5e7eb}
    *{box-sizing:border-box} body{margin:0;background:var(--bg);font-family:Poppins,Arial,sans-serif}
    header{display:flex;justify-content:space-between;align-items:center;padding:14px 18px;background:#fff;border-bottom:1px solid var(--border)}
    h1{font-size:18px;margin:0}
    .wrap{max-width:1100px;margin:16px auto;background:#fff;border:1px solid var(--border);border-radius:16px;box-shadow:0 10px 24px rgba(0,0,0,.05);padding:16px}
    .row{display:flex;gap:8px;flex-wrap:wrap;align-items:center}
    label{font-weight:600;font-size:.9rem}
    input,select{padding:10px;border:1px solid var(--border);border-radius:10px}
    table{width:100%;border-collapse:collapse;margin-top:12px} thead th,tbody td{padding:8px;border-bottom:1px solid var(--border);text-align:left}
    .btn{background:var(--primary);color:#fff;border:none;border-radius:10px;padding:8px 12px;cursor:pointer}
    .btn.secondary{background:#e9eef7;color:#111}
  </style>
</head>
<body>
  <script>Auth.ensureRole(['planner']);</script>

  <header>
    <h1>Service Order Status History</h1>
    <nav class="row">
      <a class="btn secondary" href="./planner.html">Home</a>
      <a class="btn secondary" href="./planner-jobs.html">Jobs</a>
    </nav>
  </header>
  <script>document.addEventListener('DOMContentLoaded', ()=> Auth.injectRoleBadge('header'));</script>

  <div class="wrap">
    <div class="row">
      <div><label>From</label><br><input id="from" type="date"></div>
      <div><label>To</label><br><input id="to" type="date"></div>
      <div><label>Status</label><br>
        <select id="status">
          <option value="">(any)</option>
          <option>assigned</option>
          <option>in_progress</option>
          <option>completed</option>
          <option>cancelled</option>
        </select>
      </div>
      <div><label>SO ID</label><br><input id="so" placeholder="internal numeric id"></div>
      <div style="align-self:end"><button class="btn" onclick="loadHistory()">Filter</button></div>
    </div>

    <div style="overflow:auto">
      <table>
        <thead><tr><th>Date</th><th>SO</th><th>Technician</th><th>Status</th></tr></thead>
        <tbody id="histBody"><tr><td colspan="4">Loading…</td></tr></tbody>
      </table>
    </div>
  </div>

  <script>
    const { T } = NC, api = NCAPI;

    async function loadHistory(){
      const from = document.querySelector('#from').value;
      const to   = document.querySelector('#to').value;
      let qs = 'limit=1000&sort=-changed_at';
      if(from && to) qs += `&filter=(changed_at,between,${new Date(from).toISOString()},${new Date(to).toISOString()})`;
      if(val('#status')) qs += `&filter=(status,eq,${encodeURIComponent(val('#status'))})`;
      if(val('#so')) qs += `&filter=(service_order_id,eq,${+val('#so')})`;

      const [hist, soList, techs] = await Promise.all([
        api.list(T.service_order_status_history, qs),
        api.list(T.service_orders, 'limit=5000&select=id,so_id,technician_id'),
        api.list(T.technicians, 'limit=2000&select=id,full_name')
      ]);
      const SO = Object.fromEntries(soList.list.map(s=>[s.id,s]));
      const TN = Object.fromEntries(techs.list.map(t=>[t.id,t.full_name||('Tech #'+t.id)]));

      document.querySelector('#histBody').innerHTML = hist.list.map(h=>{
        const s = SO[h.service_order_id];
        const soLabel = s ? (s.so_id||('SO #'+s.id)) : h.service_order_id;
        const tech = s ? TN[s.technician_id] : '';
        return `<tr>
          <td>${new Date(h.changed_at).toLocaleString()}</td>
          <td>${soLabel}</td>
          <td>${tech||''}</td>
          <td>${h.status||''}</td>
        </tr>`;
      }).join('') || '<tr><td colspan="4">No rows</td></tr>';
    }
    function val(sel){ const e=document.querySelector(sel); return e? e.value : ''; }
    document.addEventListener('DOMContentLoaded', loadHistory);
  </script>
</body>
</html>
